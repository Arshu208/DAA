from collections import defaultdict
def catMouseGame(graph):
    memo = {}
    def dfs(mouse, cat, turn):
        if (mouse, cat, turn) in memo:
            return memo[(mouse, cat, turn)]
        if mouse == 0:  
            return 1
        if mouse == cat:  
            return 2
        if turn == 1:
            result = 2 
            for next_mouse in graph[mouse]:
                res = dfs(next_mouse, cat, 2) 
                if res == 1: 
                    result = 1
                    break
                elif res == 0: 
                    result = 0
        else:
            result = 1 
            for next_cat in graph[cat]:
                if next_cat == 0:
                    continue 
                res = dfs(mouse, next_cat, 1) 
                if res == 2: 
                    result = 2
                    break
                elif res == 0:  
                    result = 0
        memo[(mouse, cat, turn)] = result
        return result
    return dfs(1, 2, 1)
graph = [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]
output = catMouseGame(graph)
print(output)  
